---
- name: Create temporary directory
  delegate_to: localhost
  ansible.builtin.tempfile:
    state: directory
  register: _cert_acme_tmp_dir

- name: Attempt ACME certificate request
  block:
    - name: Create ACME DNS challenge
      delegate_to: localhost
      community.crypto.acme_certificate:
        account_key_content: "{{ cert_acme_account_key_content }}"
        account_email: "{{ cert_acme_account_email }}"
        account_key_passphrase: "{{ cert_acme_account_key_passphrase | default(omit) }}"
        acme_directory: "{{ cert_acme_directory }}"
        acme_version: "{{ cert_acme_version }}"
        challenge: dns-01
        csr_content: "{{ cert_csr_content }}"
        dest: "{{ _cert_acme_tmp_dir.path }}/cert.crt"
        chain_dest: "{{ _cert_acme_tmp_dir.path }}/chain.crt"
        terms_agreed: "{{ cert_acme_terms_agreed | default(omit) }}"
      register: _cert_acme_challenge

    - name: Create TXT record
      loop: "{{ _cert_acme_challenge.challenge_data | dict2items }}"
      ansible.builtin.include_tasks: dns.yml
      loop_control:
        loop_var: _cert_acme_challenge_data

    - name: Create ACME DNS response
      delegate_to: localhost
      community.crypto.acme_certificate:
        account_key_content: "{{ cert_acme_account_key_content }}"
        account_email: "{{ cert_acme_account_email }}"
        account_key_passphrase: "{{ cert_acme_account_key_passphrase | default(omit) }}"
        acme_directory: "{{ cert_acme_directory }}"
        acme_version: "{{ cert_acme_version }}"
        challenge: dns-01
        csr_content: "{{ cert_csr_content }}"
        dest: "{{ _cert_acme_tmp_dir.path }}/cert.crt"
        chain_dest: "{{ _cert_acme_tmp_dir.path }}/chain.crt"
        data: "{{ _cert_acme_challenge }}"
      register: _cert_acme_response
      retries: 5
      failed_when:
        - _cert_acme_response is failed or _cert_acme_response.cert_days | default(-1) | int < 10
      until: _cert_acme_response is not failed

    - name: Get intermediate certificate content
      delegate_to: localhost
      ansible.builtin.slurp:
        src: "{{ _cert_acme_tmp_dir.path }}/chain.crt"
      register: _cert_acme_chain

    - name: Get certificate content
      delegate_to: localhost
      ansible.builtin.slurp:
        src: "{{ _cert_acme_tmp_dir.path }}/cert.crt"
      register: _cert_acme_certificate

    - name: Include OS family tasks
      ansible.builtin.include_tasks: "{{ ansible_os_family }}.yml"
  always:
    - name: Remove temporary directory
      delegate_to: localhost
      ansible.builtin.file:
        path: "{{ _cert_acme_tmp_dir.path }}"
        state: absent
