---
- name: Verify
  hosts:
    - subjects
  tasks:
    - name: Set file path variables | Debian-based
      when:
        - ansible_os_family == 'Debian'
      ansible.builtin.set_fact:
        _private_key_path: /etc/ssl/private/cert.key
        _certificate_path: /etc/ssl/certs/cert.crt

    - name: Set file path variables | EL
      when:
        - ansible_os_family == 'RedHat'
      ansible.builtin.set_fact:
        _private_key_path: /etc/pki/tls/private/cert.key
        _certificate_path: /etc/pki/tls/certs/cert.crt

    - name: Get private key file info
      become: true
      ansible.builtin.stat:
        path: "{{ cert_private_key_path | default(_private_key_path) }}"
      register: _private_key_info

    - name: Get certificate file info
      become: true
      ansible.builtin.stat:
        path: "{{ cert_certificate_path | default(_certificate_path) }}"
      register: _certificate_info

    - name: Get CSR file info
      become: true
      ansible.builtin.stat:
        path: "{{ cert_csr_tmp_path | default('/tmp/cert.csr') }}"
      register: csr_info

    - name: Validate private key exists
      ansible.builtin.assert:
        that:
          - _private_key_info.stat.exists
        fail_msg: Private key file does not exist.
        success_msg: Private key file exists.

    - name: Validate private key owner
      ansible.builtin.assert:
        that:
          - _private_key_info.stat.pw_name == cert_private_key_owner | default('root')
        fail_msg: Private key file does not have expected owner.
        success_msg: Private key file has expected owner.

    - name: Validate private key group
      ansible.builtin.assert:
        that:
          - _private_key_info.stat.gr_name == cert_private_key_group | default('root')
        fail_msg: Private key file does not have expected group.
        success_msg: Private key file has expected group.

    - name: Validate private key mode
      ansible.builtin.assert:
        that:
          - _private_key_info.stat.mode == cert_private_key_mode | default('0600')
        fail_msg: Private key file does not have expected mode.
        success_msg: Private key file has expected mode.

    - name: Validate that certificate exists
      ansible.builtin.assert:
        that:
          - _certificate_info.stat.exists
        fail_msg: Certificate does not exist.
        success_msg: Certificate exists.

    - name: Validate certificate owner
      ansible.builtin.assert:
        that:
          - _certificate_info.stat.pw_name == cert_certificate_owner | default('root')
        fail_msg: Certificate does not have expected owner.
        success_msg: Certificate has expected owner.

    - name: Validate certificate group
      ansible.builtin.assert:
        that:
          - _certificate_info.stat.gr_name == cert_certificate_group | default('root')
        fail_msg: Certificate does not have expected group.
        success_msg: Certificate has expected group.

    - name: Validate certificate mode
      ansible.builtin.assert:
        that:
          - _certificate_info.stat.mode == cert_certificate_mode | default('0644')
        fail_msg: Certificate does not have expected mode.
        success_msg: Certificate has expected mode.

    - name: Validate that CSR does not exist
      ansible.builtin.assert:
        that:
          - not csr_info.stat.exists
        fail_msg: CSR was not deleted.
        success_msg: CSR was deleted.
