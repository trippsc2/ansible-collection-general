---
- name: Generate CSR and sign certificate
  when:
    - cert_csr_content | default('') != ''
  block:
    - name: Get private key contents from file
      when:
        - not cert_private_key_to_variable
      block:
        - name: Get private key contents from file
          become: true
          ansible.builtin.slurp:
            src: "{{ cert_private_key_path }}"
          register: _cert_private_key

        - name: Set private key content variable
          ansible.builtin.set_fact:
            cert_private_key_content: "{{ _cert_private_key.content | b64decode }}"

    - name: Generate and sign new certificate
      delegate_to: localhost
      community.crypto.x509_certificate_pipe:
        csr_content: "{{ cert_csr_content }}"
        privatekey_content: "{{ cert_private_key_content }}"
        privatekey_passphrase: "{{ cert_private_key_passphrase | default(omit) }}"
        provider: selfsigned
        selfsigned_not_after: "{{ cert_not_after | default(omit) }}"
      register: _cert_data

    - name: Clear private key variable contents
      when:
        - not cert_private_key_to_variable
      ansible.builtin.set_fact:
        cert_private_key_content: ''
        _cert_private_key: {}

    - name: Set certificate content variable
      when:
        - cert_certificate_to_variable
      ansible.builtin.set_fact:
        cert_certificate_content: "{{ _cert_data.certificate }}"

    - name: Save certificate to file
      when:
        - cert_certificate_to_file
      become: true
      ansible.builtin.copy:
        content: "{{ _cert_data.certificate }}"
        dest: "{{ cert_certificate_path }}"
        owner: "{{ cert_certificate_owner }}"
        group: "{{ cert_certificate_group }}"
        mode: "{{ cert_certificate_mode }}"

    - name: Clear CSR variable contents
      ansible.builtin.set_fact:
        cert_csr_content: ''
